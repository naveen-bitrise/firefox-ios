// This file was autogenerated by nimbus-fml
// Trust me, you don't want to mess with it!

import Foundation
import MozillaRustComponentsWrapper

// MARK: - FxNimbus
public class FxNimbus {
    public static let shared = FxNimbus()
    
    public let features = Features()
    
    private init() {}
}

// MARK: - Features
public class Features {
    public let toolbarRefactorFeature = FeatureHolder<ToolbarRefactorFeature>()
    public let spotlightSearch = FeatureHolder<SpotlightSearch>()
    public let search = FeatureHolder<Search>()
    public let onboarding = FeatureHolder<OnboardingFeature>()
    
    init() {}
}

// MARK: - FeatureHolder
public class FeatureHolder<T> {
    public func value() -> T {
        return T() as! T
    }
}

// MARK: - Feature Types
public struct ToolbarRefactorFeature {
    public let enabled: Bool = false
    public let layout: ToolbarLayout = .bottom
    public let translucency: Bool = false
    
    public init() {}
}

public enum ToolbarLayout {
    case top
    case bottom
    case version1
    case version2
}

public struct SpotlightSearch {
    public let enabled: Bool = false
    
    public init() {}
}

public struct Search {
    public let enabled: Bool = false
    public let awesomeBar = AwesomeBarFeature()
    
    public init() {}
}

public struct AwesomeBarFeature {
    public let enabled: Bool = false
    public let position: AwesomeBarPosition = .bottom
    
    public init() {}
}

public enum AwesomeBarPosition {
    case top
    case bottom
}

public struct OnboardingFeature {
    public let enabled: Bool = false
    
    public init() {}
}

// MARK: - Onboarding Types
public enum OnboardingActions {
    case primaryButtonTap
    case secondaryButtonTap
    case syncSignIn
    case multipleChoice
}

public enum OnboardingMultipleChoiceAction {
    case primaryButtonTap
    case secondaryButtonTap
    case toolbarBottom
    case toolbarTop
}

public enum OnboardingCardType {
    case welcome
    case sync
    case notifications
    case multipleChoice
}

public enum OnboardingType {
    case freshInstall
    case upgrade
}

public enum OnboardingInstructionsPopupActions {
    case primaryButtonTap
    case secondaryButtonTap
}

// MARK: - Messaging Types
public enum MessageSurfaceId {
    case homescreen
    case newTabCard
    case notification
}